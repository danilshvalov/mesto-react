{"version":3,"sources":["components/Footer.js","images/header-logo.svg","components/Header.js","components/ImagePopup.js","utils/api.js","images/avatar.svg","components/Card.js","components/Main.js","components/MessagePopup.js","components/PopupWithForm.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","Header","src","logo","alt","ImagePopup","props","isOpen","type","onClick","onClose","card","link","name","api","baseUrl","headers","errorHandler","this","_baseUrl","_headers","_errorHandler","path","method","body","errorMessage","fetch","URL","then","res","ok","json","Promise","reject","status","sendRequest","JSON","stringify","id","about","avatar","authorization","Card","onCardClick","likes","length","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","handleApiError","promise","callback","data","catch","error","TypeError","onMessage","useEffect","getProfileData","getInitialCards","defaultAvatar","onEditAvatar","onEditProfile","onAddPlace","map","_id","MessagePopup","message","PopupWithForm","action","noValidate","title","children","submitButtonText","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isConfirmPopupOpen","setConfirmPopupOpen","isMessagePopupOpen","setMessagePopupOpen","isImagePopupOpen","setImagePopupOpen","selectedCard","setSelectedCard","popupMessage","setPopupMessage","closeAllPopups","defaultValue","placeholder","required","minLength","maxLength","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f006f33.chunk.js","sourcesContent":["function Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">© 2020 — 2021 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/header-logo.c2821b38.svg\";","import logo from \"../images/header-logo.svg\";\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img\n        className=\"header__logo\"\n        src={logo}\n        alt=\"Места России\"\n      />\n    </header>\n  );\n}\n\nexport default Header;\n","function ImagePopup(props) {\n  return (\n    <div className={`popup popup_type_image ${props.isOpen && \"popup_opened\"}`}>\n      <div className=\"popup__container\">\n        <button\n          className=\"button button_type_close popup__close-button\"\n          type=\"button\"\n          onClick={props.onClose}\n        ></button>\n        <div className=\"popup__picture picture\">\n          <img\n            className=\"picture__image\"\n            src={props.isOpen && props.card.link}\n            alt={props.isOpen && props.card.name}\n          />\n          <p className=\"picture__description\">\n            {props.isOpen && props.card.name}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","export class Api {\n  constructor({ baseUrl, headers, errorHandler }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n    this._errorHandler = errorHandler;\n  }\n\n  sendRequest({ path, method = \"GET\", body, errorMessage }) {\n    return fetch(new URL(path, this._baseUrl), {\n      method: method,\n      headers: this._headers,\n      body: body,\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`${errorMessage}. Код ошибки: ${res.status}`);\n    });\n  }\n\n  getInitialCards() {\n    return this.sendRequest({\n      path: \"cards\",\n      errorMessage: \"При запросе карточек произошла ошибка\",\n    });\n  }\n\n  addCard({ name, link }) {\n    return this.sendRequest({\n      path: \"cards\",\n      method: \"POST\",\n      body: JSON.stringify({\n        name,\n        link,\n      }),\n      errorMessage: \"При добавлении карточки произошла ошибка\",\n    });\n  }\n\n  deleteCard(id) {\n    return this.sendRequest({\n      path: `cards/${id}`,\n      method: \"DELETE\",\n      errorMessage: \"При удалении карточки произошла ошибка\",\n    });\n  }\n\n  setLike(id) {\n    return this.sendRequest({\n      path: `cards/likes/${id}`,\n      method: \"PUT\",\n      errorMessage: \"При попытке поставить like произошла ошибка\",\n    });\n  }\n\n  removeLike(id) {\n    return this.sendRequest({\n      path: `cards/likes/${id}`,\n      method: \"DELETE\",\n      errorMessage: \"При попытке убрать like произошла ошибка\",\n    });\n  }\n\n  getProfileData() {\n    return this.sendRequest({\n      path: \"users/me\",\n      errorMessage: \"При получении данных профиля произошла ошибка\",\n    });\n  }\n\n  editProfile({ name, about }) {\n    return this.sendRequest({\n      path: \"users/me\",\n      method: \"PATCH\",\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      }),\n      errorMessage: \"При редактировании профиля произошла ошибка\",\n    });\n  }\n\n  changeAvatar(link) {\n    return this.sendRequest({\n      path: \"users/me/avatar\",\n      method: \"PATCH\",\n      body: JSON.stringify({\n        avatar: link,\n      }),\n      errorMessage: \"При обновлении аватара произошла ошибка\",\n    });\n  }\n}\n\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-19/\",\n  headers: {\n    authorization: \"68d238d8-54dd-4a8c-9a47-e308386a3ea7\",\n    \"Content-Type\": \"application/json; charset=utf-8\",\n  },\n  // TODO разобраться с ErrorHandler\n  // errorHandler: errorHandler,\n});\n\nexport default api;\n","export default __webpack_public_path__ + \"static/media/avatar.c2fc30b5.svg\";","function Card(props) {\n  const handleClick = () => {\n    props.onCardClick(props.card);\n  };\n\n  return (\n    <article className=\"element\">\n      <img\n        className=\"element__image\"\n        src={props.card.link}\n        alt={props.card.name}\n        onClick={handleClick}\n      />\n      <div className=\"element__sidebar\">\n        <h3 className=\"element__title\">{props.card.name}</h3>\n        <div className=\"element__like-container\">\n          <button\n            className=\"button button_type_like element__like-button\"\n            type=\"button\"\n          ></button>\n          <span className=\"element__like-count\">{props.card.likes.length}</span>\n        </div>\n        <button\n          className=\"button button_type_delete button_hidden element__delete-button\"\n          type=\"button\"\n        ></button>\n      </div>\n    </article>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport api from \"../utils/api\";\nimport defaultAvatar from \"../images/avatar.svg\";\nimport Card from \"./Card\";\n\nfunction Main(props) {\n  const [userName, setUserName] = React.useState();\n  const [userDescription, setUserDescription] = React.useState();\n  const [userAvatar, setUserAvatar] = React.useState();\n  const [cards, setCards] = React.useState([]);\n\n  const handleApiError = (promise, callback) => {\n    promise\n      .then((data) => callback(data))\n      .catch((error) => {\n        if (error instanceof TypeError) {\n          props.onMessage(\n            \"Потеряно соединение с сервером, повторите попытку позднее\"\n          );\n        } else if (typeof error === \"string\") {\n          props.onMessage(error);\n        } else {\n          props.onMessage(\"Непредвиденная ошибка, повторите попытку позднее\");\n        }\n      });\n  };\n\n  React.useEffect(() => {\n    handleApiError(api.getProfileData(), ({ name, about, avatar }) => {\n      setUserName(name);\n      setUserDescription(about);\n      setUserAvatar(avatar);\n    });\n    handleApiError(api.getInitialCards(), (data) => setCards(data));\n  }, []);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__image-container\">\n          <img\n            className=\"profile__avatar\"\n            src={userAvatar || defaultAvatar}\n            alt=\"Аватар пользователя\"\n          />\n          <button\n            className=\"button profile__edit-avatar-button\"\n            onClick={props.onEditAvatar}\n          ></button>\n        </div>\n        <div className=\"profile__text\">\n          <div className=\"profile__name-container\">\n            <h1 className=\"profile__name\">{userName}</h1>\n            <button\n              className=\"button button_type_edit profile__edit-button\"\n              onClick={props.onEditProfile}\n              type=\"button\"\n            ></button>\n          </div>\n          <p className=\"profile__about\">{userDescription}</p>\n        </div>\n        <button\n          className=\"button button_type_add profile__add-button\"\n          onClick={props.onAddPlace}\n          type=\"button\"\n        ></button>\n      </section>\n\n      <section className=\"elements\">\n        {cards.map((data) => {\n          return (\n            <Card card={data} key={data._id} onCardClick={props.onCardClick} />\n          );\n        })}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","function MessagePopup(props) {\n  return (\n    <div className={`popup popup_type_message ${props.isOpen && \"popup_opened\"}`}>\n      <div className=\"popup__container\">\n        <div className=\"popup__message-box message-box\">\n          <span className=\"message-box__text\">{props.message}</span>\n        </div>\n        <button\n          className=\"popup__close-button popup__close-button_indent button button_type_close button_small-size button_inverted-color\"\n          type=\"button\"\n          onClick={props.onClick}\n        ></button>\n      </div>\n    </div>\n  );\n}\n\nexport default MessagePopup;\n","function PopupWithForm(props) {\n  return (\n    <div\n      className={`popup popup_type_${props.name} ${\n        props.isOpen && \"popup_opened\"\n      }`}\n    >\n      <div className=\"popup__container\">\n        <form\n          className={`form popup__${props.name}-form`}\n          method=\"POST\"\n          action=\"/\"\n          name={props.name}\n          noValidate\n        >\n          <h2 className=\"form__title\">{props.title}</h2>\n          {props.children}\n          <button\n            className=\"button button_type_submit form__submit-button\"\n            type=\"submit\"\n          >\n            {props.submitButtonText}\n          </button>\n        </form>\n        <button\n          className=\"button button_type_close popup__close-button\"\n          onClick={props.onClose}\n          type=\"button\"\n        ></button>\n      </div>\n    </div>\n  );\n}\n\nexport default PopupWithForm;\n","import React from \"react\";\n\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport ImagePopup from \"./components/ImagePopup\";\nimport Main from \"./components/Main\";\nimport MessagePopup from \"./components/MessagePopup\";\nimport PopupWithForm from \"./components/PopupWithForm\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(\n    false\n  );\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isConfirmPopupOpen, setConfirmPopupOpen] = React.useState(false);\n  const [isMessagePopupOpen, setMessagePopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState();\n  const [popupMessage, setPopupMessage] = React.useState();\n\n  const openMessagePopup = (message) => {\n    setPopupMessage(message);\n    setMessagePopupOpen(true);\n  };\n\n  const handleEditAvatarClick = () => {\n    setEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setAddPlacePopupOpen(true);\n  };\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n    setImagePopupOpen(true);\n  };\n\n  const closeMessagePopup = () => {\n    setImagePopupOpen(false);\n  };\n\n  const closeAllPopups = () => {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setConfirmPopupOpen(false);\n    setImagePopupOpen(false);\n    setMessagePopupOpen(false);\n  };\n\n  return (\n    <div className=\"page\">\n      <Header />\n      <Main\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onEditAvatar={handleEditAvatarClick}\n        onCardClick={handleCardClick}\n        onMessage={openMessagePopup}\n      />\n      <Footer />\n\n      {isEditProfilePopupOpen && (\n        <PopupWithForm\n          name=\"edit-profile\"\n          title=\"Редактировать профиль\"\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          submitButtonText=\"Сохранить\"\n        >\n          <fieldset className=\"fieldset form__edit-profile-fieldset\">\n            <div className=\"field fieldset__field\">\n              <input\n                className=\"field__input\"\n                id=\"name-input\"\n                name=\"nameInput\"\n                type=\"text\"\n                defaultValue=\"\"\n                placeholder=\"Имя\"\n                required\n                minLength=\"2\"\n                maxLength=\"40\"\n              />\n              <span\n                className=\"field__error-message\"\n                id=\"name-input-error\"\n              ></span>\n            </div>\n            <div className=\"field fieldset__field\">\n              <input\n                className=\"field__input\"\n                id=\"job-input\"\n                name=\"jobInput\"\n                type=\"text\"\n                defaultValue=\"\"\n                placeholder=\"Деятельность\"\n                required\n                minLength=\"2\"\n                maxLength=\"200\"\n              />\n              <span\n                className=\"field__error-message\"\n                id=\"job-input-error\"\n              ></span>\n            </div>\n          </fieldset>\n        </PopupWithForm>\n      )}\n\n      {isAddPlacePopupOpen && (\n        <PopupWithForm\n          name=\"add-element\"\n          title=\"Новое место\"\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          submitButtonText=\"Создать\"\n        >\n          <fieldset className=\"fieldset form__add-element-fieldset\">\n            <div className=\"field fieldset__field\">\n              <input\n                className=\"field__input\"\n                id=\"title-input\"\n                name=\"titleInput\"\n                type=\"text\"\n                defaultValue=\"\"\n                placeholder=\"Название\"\n                required\n                minLength=\"1\"\n                maxLength=\"30\"\n              />\n              <span\n                className=\"field__error-message\"\n                id=\"title-input-error\"\n              ></span>\n            </div>\n            <div className=\"field fieldset__field\">\n              <input\n                className=\"field__input\"\n                id=\"link-input\"\n                name=\"linkInput\"\n                type=\"url\"\n                defaultValue=\"\"\n                placeholder=\"Ссылка на картинку\"\n                required\n              />\n              <span\n                className=\"field__error-message\"\n                id=\"link-input-error\"\n              ></span>\n            </div>\n          </fieldset>\n        </PopupWithForm>\n      )}\n      {isEditAvatarPopupOpen && (\n        <PopupWithForm\n          name=\"change-avatar\"\n          title=\"Обновить аватар\"\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          submitButtonText=\"Сохранить\"\n        >\n          <fieldset className=\"fieldset form__change-avatar-fieldset\">\n            <div className=\"field fieldset__field\">\n              <input\n                className=\"field__input\"\n                id=\"avatar-input\"\n                name=\"avatarInput\"\n                type=\"url\"\n                defaultValue=\"\"\n                placeholder=\"Ссылка на картинку\"\n                required\n              />\n              <span\n                className=\"field__error-message\"\n                id=\"avatar-input-error\"\n              ></span>\n            </div>\n          </fieldset>\n        </PopupWithForm>\n      )}\n      {isConfirmPopupOpen && (\n        <PopupWithForm\n          name=\"confirm\"\n          title=\"Вы уверены?\"\n          isOpen={isConfirmPopupOpen}\n          onClose={closeAllPopups}\n          submitButtonText=\"Да\"\n        ></PopupWithForm>\n      )}\n      {isImagePopupOpen && (\n        <ImagePopup\n          card={selectedCard}\n          isOpen={isImagePopupOpen}\n          onClose={closeAllPopups}\n        />\n      )}\n      {isMessagePopupOpen && (\n        <MessagePopup\n          isOpen={isMessagePopupOpen}\n          onClose={closeMessagePopup}\n          message={popupMessage}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}